<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AADLxrn/ysW2/8rFtf/KxbX/ysW1/8rFtf/KxbX/ysW1/8rFtf/KxbX/ysW1/8rFtf/KxbX/ysW1/8rF
        tf/KxbX/ysW1/8rFtf/KxbX/ysW1/8rFtf/KxbX/ysW1/8rFtf/KxbX/ysW1/8rFtf/KxbX/ysW1/8rF
        tf/Kxbf/ysa4/8vBrf+/omn/vp5h/76eYf++nmH/vp5h/76eYf++nmH/vp5h/76eYf++nmH/vp5h/76e
        Yf++nmH/vp5h/76eYf++nmH/vp5h/76eYf++nmH/vp5h/76eYf++nmH/vp5h/76eYf++nmH/vp5h/76e
        Yf++nmH/vp5g/8Ckbv/PyLn/w6p7/7ODJP+zgyT/s4Mk/7ODJP+zgyT/s4Mk/7ODJP+zgyT/s4Mk/7OD
        JP+zgyT/s4Mk/7OCJP+zgiT/s4Mk/7OCJP+zgiT/s4Ik/7OCJP+zgiT/s4Ik/7OCJP+zgiT/s4Ik/7OC
        JP+zgiT/s4Mk/7ODJP+zgyT/tIQn/8m2kv/Dq3v/tIQn/7SEJ/+0hCf/tIQn/7SEJ/+0hCf/tIQn/7SE
        J/+0hCf/tIQn/7WFKf+1hSn/toct/7aHLf+1hSn/t4kv/7aHLf+2iC7/togu/7aILv+2hy3/t4gu/7aI
        Lv+3iC//t4kx/7aHLf+0hCf/tIQn/7SEJ/+0hSn/ybaS/8SrfP+0hCf/tIQn/7SEJ/+0hCf/tIQn/7SE
        J/+0hCf/tIQn/7SEJ/+0gyb/uo04/8ilYv/Mq2z/yqhn/8CYSv/NrXH/xJ9X/8uqav/PsHX/zq5z/8yr
        bf/Or3T/zKtt/86uc//PsHf/y6pr/7aILv+0hCf/tIQn/7SFKf/Kt5L/xKt8/7SEJ/+0hCf/tIQn/7SE
        J/+0hCf/tIMm/7SFKP+0hSj/tIQn/7ODJf+2hy3/wJhM/7yRP/+5jTf/uYw1/7uQPP+3iTH/vZNB/72S
        QP+9k0H/u487/7mNNv+6jTj/vJE+/7qOOf+6jTf/tYYr/7SEJ/+0hCf/tIUp/8q3kv/FrH3/tIQn/7SE
        J/+0gyb/uo45/9O2f//bw5f/zKts/8ilYv/TtoD/w51T/72TQv/WvIn/1buI/76URP+zgyX/tIMm/7OD
        Jf/GoVr/1r2L/9Cxd//Qsnn/yKRg/7WGKv/FoFn/2sKV/8+wdP+4ijH/tIQm/7SEJ/+0hSn/y7iT/8Ws
        ff+0hCf/tIQn/7SEJ/+0hCf/1LmE/+3hy/+6jjj/togt/8SeVv/Mq2z/tYUp/+DMpv/cxpz/tIQn/7OC
        JP+0gyb/tIQn/9S5hf/Ho13/tocs/7yRP//n2Lv/w51T/7uQPP/x6Nf/za1v/7SDJv+0hCf/tIQn/7SF
        Kf/LuJP/xa1+/7SEJ/+0hCf/tIQn/7OCI//Rs3r/697F/7qNOP/Fn1f/v5dI/7SFKP+zgyX/3Mac/+LQ
        rf/Fn1f/xaBY/7uPO/+0hCf/t4kw/7WGK//BmU3/2cCS/+jZvf++lET/uIsy/+7jzf/Jp2X/s4Ik/7SE
        J/+0hCf/tIUp/8y5lP/GrX7/tIQn/7SEJ/+0hCf/s4Ij/9Czef/w5tT/x6Ne/9vDl//IpF//s4Ij/7OD
        Jf/dx53/4Mul/7+WSP/KqWj/4tCt/7+WRv+6jjj/3ced/+bVtv/UuIP/u5A9/7ODJf+5jDX/7uPO/8mn
        Zf+zgiT/tIQn/7SEJ/+0hSn/zLmU/8aufv+0hCf/tIQn/7SEJ/+zgiP/0bN6/+vexv+1hiv/uIs0/8Se
        Vf+4ijL/s4Ij/93Hnv/ZwZP/sYAg/7WGK//o2bz/yqhm/86ucv/m1rf/uYw1/7KBIf/Cmk//uo04/7iK
        Mv/u487/yadl/7OCI/+0hCf/tIQn/7SFKf/NupX/x65//7SEJ/+0hCf/tIQm/7mMNf/awpX/6dvA/8ej
        Xv/Ho17/3sig/7+WRv+8kT7/4s+s/93In//Ho13/0bR7/9vDlv+6jjf/v5VF/9nBkv/Lqmr/zKtt/+DM
        pv+9k0L/xJ9X/+zfx//Vuob/t4kx/7SEJv+0hCf/tIUp/826lf/Hrn//tIQn/7SEJ/+0hCf/t4gv/72S
        QP+8kkD/vJE+/72SQP+8kj//tocr/7mNNf+/lkn/vpNL/7uPTP+4ikb/s4E2/7OBMv+1hTH/uY04/8CY
        Sf/BmUz/vJJA/7WFKf+6jjn/vZJA/7yRP/+2hyz/tIQn/7SEJ/+0hSr/zbqW/8evf/+0hCf/tIQn/7SE
        J/+0hCf/s4Ml/7ODJf+0gyX/tYIj/7eIMP+3iUD/qm8y/5dNIv+LOhj/hjAS/4QsD/+ELRD/hzIU/408
        Gv+ZUSX/rHIz/7eJPf+3hy3/toMl/7SDJf+zgyX/s4Mm/7SEJ/+0hCf/tIQn/7SFKv/Ou5b/x69//7SE
        J/+0hCf/tIQn/7SEJ/+0hCf/tYMl/7WJMP+do2b/spVO/6hxQv+RQxf/gCIA/3kZAP95GgD/eRoA/3ka
        AP95GgD/eRkA/4EkAP+TSR3/q3ZD/6+ZU/+foGL/tocs/7SDJv+0hCf/tIQn/7SEJ/+0hCf/tIUq/867
        lv/Ir4D/tIQn/7SEJ/+0hCf/tIQn/7WDJf+xkD//Z7+p/xbX5/9wpHP/rHUw/5pZLv+IMAT/fB4A/3ob
        AP96GwD/ehsA/3obAP99HwD/ijQG/5xdM/+teC//X6yG/xnX6P9zupv/tIw3/7SDJf+0hCf/tIQn/7SE
        J/+0hSr/z7yX/8iwgP+0hCf/tIQn/7SEJ/+0gyX/so89/1nHuv8D2/L/ANrz/ybHxf+iiDv/o2o4/5FE
        F/+BJQD/ehsA/3obAP96GwD/ehsA/4MnAP+TSR3/pm03/5mORf8azdP/ANrz/wfb8f9owav/tYs1/7SD
        Jv+0hCf/tIQn/7WFKv/PvJf/zbSF/7SEJ/+0hCf/tIQn/7eGK/91vJ//Bdvy/wDZ8P8A2fD/Adjv/2ep
        ff+tdzD/mlow/4kxBP98HgD/ehsA/3obAP99HwD/izUI/51fNP+uey//VrGQ/wDa8f8A2fD/ANnw/wvb
        8P+FtIz/t4Qn/7SEJ/+0hCf/tYUq/9TBnP/Ptof/tIQn/7SEJ/+1gyT/qptU/ybX4/8A2fH/ANnw/wDZ
        8P8A2vL/H8rN/56LQP+lazf/kkYZ/4IlAP96GwD/ehsA/4MoAP+USx//p242/5OSTP8U0Nr/ANry/wDZ
        8P8A2fD/ANry/zbT2f+wlEb/tIMl/7SEJ/+1hSr/18Of/8+3h/+0hCf/tIQn/7eDJP+LsYb/B9vy/wDZ
        8P8A2fD/ANnw/wDZ8P8A2fD/Xq2I/655L/+bXDH/iTMF/3weAP99HwD/izcJ/51gNf+tfTD/TLWb/wDa
        8v8A2fD/ANnw/wDZ8P8A2fD/D9vw/5mocv+2giT/tIQn/7WFKv/XxJ//z7eH/7SEJ/+0hCf/uIQm/3q7
        nP8B2/T/ANnw/wDZ8P8A2fD/ANnw/wDa8v8ZzdT/mI9G/6ZtNv+SRxv/gycA/4QpAP+VTSH/qXA1/42W
        U/8P0t//ANrx/wDZ8P8A2fD/ANnw/wDZ8P8G2/P/i7KH/7eDJP+0hCf/tYUq/9fEn//Pt4j/tIQn/7SE
        J/+3gyX/g7aQ/wPb8/8A2fD/ANnw/wDZ8P8A2fD/ANnw/wDa8v9UspL/rnsw/5xeMv+LNQb/jDgK/55i
        Nf+sfzH/Q7ql/wDa8/8A2fD/ANnw/wDZ8P8A2fD/ANnw/wrb8f+TrXz/toMk/7SEJ/+1hSr/18Sf/9C3
        iP+0hCf/tIQn/7WDJP+homX/GNnr/wDZ8P8A2fD/ANnw/wDZ8P8A2fD/ANrx/xPQ2/+Skk3/p241/5NJ
        Hf+VTiL/qnEz/4WaXP8L1OT/ANnx/wDZ8P8A2fD/ANnw/wDZ8P8A2fH/Jdfk/6qaVP+1gyT/tIQn/7WF
        Kv/YxaD/0LeI/7SEJ/+0hCf/tIQm/7aLM/9ax7v/ANvz/wDZ8P8A2fD/ANnw/wDZ8P8A2fD/ANry/0u2
        nf+tfTD/n2M4/6BlOP+qgTP/Or6v/wDa8/8A2fD/ANnw/wDZ8P8A2fD/ANnw/wHb8/9swKn/t4ct/7SE
        J/+0hCf/tYUq/9jFoP/QuIn/tIQn/7SEJ/+0hCf/tYMl/6ibVf820tf/ANrz/wDZ8P8A2fD/ANnw/wDZ
        8P8A2fH/DtLg/4uWVf+pcDX/q3Iy/32eZf8H1uj/ANnx/wDZ8P8A2fD/ANnw/wDZ8P8A2vP/Rc7M/66V
        SP+1gyX/tIQn/7SEJ/+1hir/2MWg/9G4if+0hCf/tIQn/7SEJ/+0hCf/toMm/6KeXf8+z8//Atvz/wDZ
        8f8A2fD/ANnw/wDZ8P8A2vP/Qrqn/66BLv+ohDT/MsK5/wDa8/8A2fD/ANnw/wDZ8P8A2fH/BNvy/0vL
        xP+pmVH/tYMl/7SEJ/+0hCf/tIQn/7WGKv/ZxqH/0bmJ/7SEJ/+0hCf/tIQn/7SEJ/+0hCf/toMl/62U
        Rv9rvKL/INbj/wHb8/8A2vL/ANnx/wDZ8f8K1OX/hppa/3ahbP8E1+v/ANnx/wDZ8f8A2vP/A9vy/yfU
        3v91uJf/sZA+/7WDJf+0hCf/tIQn/7SEJ/+0hCf/tYYq/9nGof/RuYr/tIQn/7SEJ/+0hCf/tIQn/7SE
        J/+0hCf/tYMl/7eGK/+kmlX/creW/z/Myf8d1uP/DNnu/wPb9P8wxL//J8nJ/wPb9P8N2e3/INXh/0TK
        xP95tI//qJdO/7eFKP+0gyX/tIQn/7SEJ/+0hCf/tIQn/7SEJ/+1hir/2cah/9K5iv+0hCf/tIQn/7SE
        J/+0hCf/tIQn/7SEJ/+0hCf/tIQn/7WDJP+3hCb/s4w2/6WYUP+TpGv/g6x//3yxif98sIj/hax9/5Wj
        aP+nlk3/tIoz/7eEJv+1gyX/tIQn/7SEJ/+0hCf/tIQn/7SEJ/+0hCf/tIQn/7WGKv/ZxqH/0bmJ/7SD
        Jf+0gyb/tIMm/7SDJv+0gyb/tIMm/7SDJv+0gyb/tIMm/7SDJv+0gyX/tYIk/7aCI/+3giP/t4Ij/7eC
        I/+3giP/toIj/7WCJP+0gyX/tIMm/7SDJv+0gyb/tIMm/7SDJv+0gyb/tIMm/7SDJv+0gyb/tIUo/9nG
        of/byKX/vJE//7qOOf+6jjn/uo45/7qOOf+6jjn/uo45/7qOOf+6jjn/uo45/7qOOf+6jjn/uo45/7qO
        Of+6jjn/uo45/7qOOf+6jjn/uo45/7qOOf+6jjn/uo45/7qOOf+6jjn/uo45/7qOOf+6jjn/uo45/7qO
        Of+9lET/4dO5/97d2f/Wzr3/1Mq2/9TKt//Uyrf/1Mq3/9TKt//Uyrf/1Mq3/9TKt//Uyrf/1Mq3/9TK
        t//Uyrf/1Mq3/9TKt//Uyrf/1Mq3/9TKt//Uyrf/1Mq3/9TKt//Uyrf/1Mq3/9TKt//Uyrf/1Mq3/9TK
        t//Uyrf/1Mq2/9fPwP/e3dv/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>